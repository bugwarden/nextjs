name: Release

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches: ["main"]
    paths: [".changeset/**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  FORCE_COLOR: 3
  DO_NOT_TRACK: true

jobs:
  release:
    name: Release
    environment: Release
    runs-on: ubuntu-latest
    if: >-
      ${{
        (
          github.repository == 'bugwarden/nextjs' &&
          github.actor.login == 'ryuudotgg'
        ) ||
        (
          github.event_name == 'pull_request' &&
          github.event.pull_request.merged == true &&
          contains(github.head_ref, 'changeset-release') &&
          github.event.pull_request.user.login == 'ryuudotgg'
        )
      }}

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: "package.json"

      - name: Install Dependencies
        run: bun install

      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_SIGNING_KEY }}

      - name: Git Config
        run: |
          git config --global user.name "Ryuu"
          git config --global user.email "me@ryuu.gg"
          git config --global gpg.format ssh
          git config --global user.signingKey "$(ssh-add -L | head -n 1)"
          git config --global commit.gpgsign true

      - name: Create a Pull Request & Release
        uses: changesets/action@v1
        id: changesets

        with:
          title: "feat(release): create a new release and update the version"
          commit: "feat(release): create a new release and update the version"
          createGithubReleases: true
          setupGitUser: false
          publish: bunx changeset version

          # TODO: Re-enable NPM Publishing
          # publish: bunx release

        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
